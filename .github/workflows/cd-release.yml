name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean install

      - name: Set up Git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
      
      - name: Set timestamp
        id: timestamp
        run: echo "::set-output name=ts::$(date +%y.%m.%d)"

      - name: Capture commit messages
        run: git log --pretty=oneline > commit_messages.md

      - name: Create Release Tag
        id: create_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "RELEASE_DATE=$(date +%y.%m.%d)" >> ${GITHUB_ENV}
          echo ${{github.env.GITHUB_ENV}}

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.timestamp.outputs.ts }}
          release_name: Release ${{ steps.timestamp.outputs.ts 
          body: |
            ## Changelog
            ```
            $(cat commit_messages.md)
            ```
          draft: false
          prerelease: false

      - name: Build Docker Image
        run: docker build -t ungaratto93/api-fx:v${{ steps.timestamp.outputs.ts }} .
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push ungaratto93/api-fx:v${{ steps.timestamp.outputs.ts }}
